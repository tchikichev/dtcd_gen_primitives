{"graph":{"nodes":[{"primitiveID":"Исходный__Excel_482","primitiveName":"Исходный__Excel","properties":{"source":{"type":"expression","expression":"","status":"inProgress","value":""},"description":{"type":"expression","expression":"\"Инфа за предыдущий месяц\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"nodeTitle":"SAP_предыдущий","image":"/rawPrimitives/Исходный__Excel/excel.svg","initPorts":[{"properties":{"status":{"type":"expression","expression":"","status":"inProgress","value":""}},"primitiveName":"outPort11","type":["OUT"],"primitiveID":"Исходный__Excel_482_outPort11","location":{"x":1113.0402717566976,"y":795.75}}],"layout":{"x":1083.0402717566976,"y":795.75,"height":60,"width":60}},{"primitiveID":"ControlledRichLabelNode01_15654","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"prokat_small_price.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669027956,"twf":1669027956,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source$ $this.props.__rename$ | foreach $this.props.__monthes_en$ [| rename <<FIELD>> as <<FIELD>>_price] | rename Подрядчик as p | rename Типоразмер as t | eval pt = p+t"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__rename_price":{"type":"expression","expression":"","status":"inProgress","value":""},"__monthes_en":{"type":"expression","expression":"\"jan,feb,mar,apr,may,jun,jul,aug,sep,oct,nov,dec\"\n","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Цена проката по типоразмеру и подрядчикам</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.source","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15654_outPort1","location":{"x":35.30492019419762,"y":1424.518125}}],"layout":{"x":-76.28394699330238,"y":1426.828125,"height":120,"width":223.177734375}},{"primitiveID":"Исходный__Excel_483","primitiveName":"Исходный__Excel","properties":{"source":{"type":"expression","expression":"","status":"inProgress","value":""}},"nodeTitle":"SAP для входящих и выбвающих","image":"/rawPrimitives/Исходный__Excel/excel.svg","initPorts":[{"properties":{"status":{"type":"expression","expression":"","status":"inProgress","value":""}},"primitiveName":"outPort11","type":["OUT"],"primitiveID":"Исходный__Excel_483_outPort11","location":{"x":245.11644363169762,"y":197.4375}}],"layout":{"x":215.11644363169762,"y":197.4375,"height":60,"width":60}},{"primitiveID":"ControlledRichLabelNode01_15655","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Цена_переход (есть индексация)</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15655_outPort1","location":{"x":-200.50074386830238,"y":187.9175}}],"layout":{"x":-272.3757438683024,"y":189.4375,"height":76,"width":143.75}},{"primitiveID":"ControlledRichLabelNode01_15656","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"prokat_small.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669027956,"twf":1669027956,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source$ $this.props.__rename$ $this.props.__month_days$"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__month_days":{"type":"expression","expression":"ServiceTask_76.__month_days","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Кол-во скважин по типоразмерам (сумма по месторождению) и подрядчикам</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.source","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15656_outPort1","location":{"x":323.8937873816976,"y":1426.768125}}],"layout":{"x":176.89378738169762,"y":1429.078125,"height":115.5,"width":294}},{"primitiveID":"StepRichLabelNode11_2128","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"CDF_svod_GTM_baza.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>ЭЦН_Общие = </strong></p><p><br></p><p>СДФ_свод ГТМ база - Фонд_ШГН-Фонд_Проч</p><p><strong><span class=\"ql-cursor\">﻿﻿﻿﻿﻿﻿﻿﻿﻿﻿</span></strong></p>","initPorts":[{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2128_inPort1","location":{"x":-266.4382438683024,"y":1333.403125}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.source","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2128_outPort1","location":{"x":-266.4382438683024,"y":1232.003125}}],"layout":{"x":-360.3132438683024,"y":1233.953125,"height":97.5,"width":187.75}},{"primitiveID":"StepRichLabelNode11_2129","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"__planned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes;\n","status":"inProgress","input":{"component":"textarea"},"value":""},"__prev_month":{"type":"expression","expression":"ServiceTask_76.__prev_month","status":"inProgress","value":"","input":{"component":"textarea"}},"__from_fact_to_planned":{"type":"expression","expression":"let planned = this.__planned_monthes;\nlet prev = this.__prev_month;\nlet st = \"\";\n\nfor (const el of planned) {\nst = st + \" | eval \" + el + \"=if((\" + prev[el] + \"-temp_v)>=0,\" + prev[el] + \"-temp_v,0)\"\n}\nst\n","status":"inProgress","input":{"component":"textarea"},"value":""},"__sum_monthes":{"type":"expression","expression":"let sm = ServiceTask_76.__sum_monthes;\nsm = sm.replace(/_vol/g,'');\nsm = sm.replace(/Месторождение/g,'deposit');\nsm = sm+\",provider\"\nsm","status":"inProgress","input":{"component":"textarea"},"value":""},"__fact_monthes":{"type":"expression","expression":"ServiceTask_76.__fact_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"osn_v":{"type":"expression","expression":"let pm = this.__planned_monthes;\nlet prev = this.__prev_month;\nlet st = \"\";\nfor (const el of pm) {\nst = st + \" | eval \" + el + \"=\" + \"if((\" + el + \"_v - \" + prev[el] + \")/100*dm*coef_sobstv+\" + prev[el] + \"-\" + el + \"_v<=0,(\" + el + \"_v - \" + prev[el] + \")/100*dm*coef_sobstv+\" + prev[el] + \",\" + el + \"_v) + 0\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_en":{"type":"expression","expression":"ServiceTask_76.monthes_en","status":"inProgress","input":{"component":"textarea"},"value":""},"__from_fact_to_planned2":{"type":"expression","expression":"let planned = this.__planned_monthes;\nlet prev = this.__prev_month;\nlet st = \"\";\n\nfor (const el of planned) {\nst = st + \" | eval \" + el + \"=if(\" + el + \">=0,\" + el + \",\" + prev[el] + \"-temp_v) | eval \" + el + \"=if(\" + el + \">0,\" + el + \",0)\"\n}\nst\n","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL_T":{"type":"datasource","expression":{"type":"OTL","tws":1669292331,"twf":1669292331,"cache_ttl":60,"original_otl":"| inputlookup ep_fact.csv | $this.props.__from_fact_to_planned$ $this.props.__sum_monthes$ | join deposit,provider [| fsget path=FS/component_fs/pump_dm] | fields - $this.props.__planned_monthes$ | join provider,deposit [|fsget path=FS/component_fs/eov] $this.props.osn_v$ | fields provider,deposit,$this.props.__monthes_en$ | join deposit,provider [ |inputlookup ep_fact.csv | $this.props.__from_fact_to_planned$ | fields deposit,provider,temp_v] $this.props.__from_fact_to_planned2$ | eval lot=\"T\" | fields - temp_v | append [| inputlookup ep_fact.csv | $this.props.__from_fact_to_planned$ | fields - temp_v] $this.props.____avg_monthes$ | fsput path=FS/component_fs/EP"},"status":"inProgress","value":"","input":{"component":"textarea"}},"____avg_monthes":{"type":"expression","expression":"let sm =this.__sum_monthes;\nsm = sm.replace(/sum/g,'avg');\nsm = sm + \",lot\"\nsm\n","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>ЭЦН_Прокат</strong></p><p>Используется разность двух соседних месяцев: текущего и предыдущего</p><p><br></p><p>Основной =</p><p>=ЕСЛИ(((('ЭЦН_Общие (вычет) текущий месяц-Основной Прыдыдущий месяц)/100*Доля Монтажей *К-т вовлечения собственного обрудования+Основной_предыдущий месяц)-'ЭЦН_Общие (вычет) теущий месяц)&lt;=0;('ЭЦН_Общие (вычет) текущий месяц-Основной Прыдыдущий месяц)/100*Доля Монтажей *К-т вовлечения собственного обрудования+Основной_предыдущий месяц)-'ЭЦН_Общие (вычет) теущий месяц)+Сценарий запуска прокатного фонда после простоя</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2129_outPort1","location":{"x":304.0949592566976,"y":565.151875}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2129_inPort1","location":{"x":304.0949592566976,"y":644.191875}}],"layout":{"x":221.34495925669762,"y":566.671875,"height":76,"width":165.5}},{"primitiveID":"ControlledRichLabelNode01_15657","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Темп выбытия</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15657_outPort1","location":{"x":925.6691780066976,"y":794.0899999999999}}],"layout":{"x":842.9191780066976,"y":795.75,"height":83,"width":165.5}},{"primitiveID":"StepRichLabelNode11_2130","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"CDF_svod_GTM_baza.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>СДФ_свод ГТМ база</strong></p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2130_outPort1","location":{"x":-266.4382438683024,"y":1403.433125}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2130_inPort1","location":{"x":-266.4382438683024,"y":1495.473125}}],"layout":{"x":-361.0007438683024,"y":1405.203125,"height":88.5,"width":189.125}},{"primitiveID":"ControlledRichLabelNode01_15658","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"coef":{"type":"expression","expression":"0.98","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>К-т эксплуатации</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.coef","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15658_outPort1","location":{"x":646.9074592566976,"y":564.721875}}],"layout":{"x":564.1574592566976,"y":566.671875,"height":76,"width":165.5}},{"primitiveID":"StepRichLabelNode11_2131","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Факт. Внизу справки от 5 поставщиков (ежемесячные). Можно увидеть расходы по каждой скважине</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2131_outPort1","location":{"x":245.11644363169762,"y":2.9875000000000114}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2131_inPort1","location":{"x":245.11644363169762,"y":104.38749999999999}}],"layout":{"x":137.74144363169762,"y":4.9375,"height":97.5,"width":214.75}},{"primitiveID":"StepRichLabelNode11_2132","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"__sum_by":{"type":"expression","expression":"let sm = ServiceTask_76.__sum_monthes;\nsm = sm.replace(/_vol/g,'');\nsm = sm.replace(/Месторождение/g,'deposit');\nsm = sm+\",provider\"\nsm","status":"inProgress","input":{"component":"textarea"},"value":""},"__indexation_source":{"type":"expression","expression":"this.inPort2","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_en_massive":{"type":"expression","expression":"ServiceTask_76.__monthes_en_massive","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_indexation":{"type":"expression","expression":"let monthes = this.__monthes_en_massive;\nlet st = \"\";\nfor (const el of monthes) {\nst = st + \" | rename \" + el + \" as \" + el + \"_ind\"\n}\nst\n","status":"inProgress","input":{"component":"textarea"},"value":""},"__load_path":{"type":"expression","expression":"this.inPort3","status":"inProgress","input":{"component":"textarea"},"value":""},"__load_path_v":{"type":"expression","expression":"\"FS/eprokat/stp_v\"","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL_o":{"type":"datasource","expression":{"type":"OTL","tws":1669804371,"twf":1669804371,"cache_ttl":60,"original_otl":"| fsget path=FS/eprokat/stp_o $this.props.__sum_by$ | join provider,deposit [| inputlookup $this.props.__indexation_source$ $this.props.__sum_by$ $this.props.__monthes_indexation$] | join provider,deposit [| fsget path=$this.props.__load_path$] | fillnull \n| foreach $this.props.__monthes_en_massive$ [| eval <<FIELD>>=<<FIELD>>+<<FIELD>>_ind+<<FIELD>>_do] | eval lot=\"O\" | fields - *ind, *do | fsput path=FS/eprokat/stp_o_final"},"status":"inProgress","value":"","input":{"component":"textarea"}},"OTL_T":{"type":"datasource","expression":{"type":"OTL","tws":1669804474,"twf":1669804474,"cache_ttl":60,"original_otl":"| fsget path=FS/eprokat/stp_o_final | append [| fsget path=$this.props.__load_path_v$] | append [| fsget path=$this.props.__load_path_maloeff$] | fillnull  $this.props.__sum_by_deposit$ | join deposit [| fsget path = fsput path=FS/eprokat/sum_sp] $this.props.__correct_order$ | fsput path=FS/eprokat/MP_prokat"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__sum_by_deposit":{"type":"expression","expression":"let sm = ServiceTask_76.__sum_monthes;\nsm = sm.replace(/_vol/g,'');\nsm = sm.replace(/Месторождение/g,'deposit');\nsm","status":"inProgress","input":{"component":"textarea"},"value":""},"__load_path_maloeff":{"type":"expression","expression":"this.inPort4","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL_v":{"type":"datasource","expression":{"type":"OTL","tws":1669892482,"twf":1669892482,"cache_ttl":60,"original_otl":"| fsget path=$this.props.__load_path_v$ | append [| fsget path=$this.props.__load_path_maloeff$] | fillnull $this.props.__sum_by_deposit$"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__correct_order":{"type":"expression","expression":"let m = Object.assign([], this.__monthes_en_massive);\nlet st = \"| fields deposit,\";\nlet ren = ServiceTask_76.__rename_rev[0].query;\nlet rn = ServiceTask_76.__rename_dictionary\n\nfor (const el of m) {\nst = st + el + \"_sp,\" + el + \",\"\n}\n\n/* переименование нормальное */\nst = st + \" | rename \" + ren ;\nst = st + \" | rename \" ;\nfor (const el of m) {\nst = st + el + \"_sp as Сут_проката_\" + rn[el] +\",\"\n}\nst = st.substring(0,st.length-1);\nst ","status":"inProgress","input":{"component":"textarea"},"value":""}},"portCounters":{"inPorts":4,"outPorts":1},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong><large style=\"font-size: 1.5em\">Прокат нефтепромыслового оборудования&nbsp; Добыча</large></strong></p>","initPorts":[{"primitiveName":"inPort3","isAddedManually":true,"portLocation":"bottom","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\n          let inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray();\n          if (inEdges.length < 1) ''\n          else eval(inEdges[0].sourcePort.tag.primitiveID).status;","type":"expression","status":"inProgress","value":""}},"initPosition":{"x":0.5,"y":1},"primitiveID":"StepRichLabelNode11_2132_inPort3","location":{"x":796.4081256508575,"y":-111.796875}},{"primitiveName":"inPort2","isAddedManually":true,"portLocation":"bottom","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\n          let inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray();\n          if (inEdges.length < 1) ''\n          else eval(inEdges[0].sourcePort.tag.primitiveID).status;","type":"expression","status":"inProgress","value":""}},"initPosition":{"x":0.25,"y":1},"primitiveID":"StepRichLabelNode11_2132_inPort2","location":{"x":665.3039436316976,"y":-111.796875}},{"primitiveName":"inPort4","isAddedManually":true,"portLocation":"bottom","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\n          let inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray();\n          if (inEdges.length < 1) ''\n          else eval(inEdges[0].sourcePort.tag.primitiveID).status;","type":"expression","status":"inProgress","value":""}},"initPosition":{"x":0.75,"y":1},"primitiveID":"StepRichLabelNode11_2132_inPort4","location":{"x":1011.5331256508575,"y":-111.796875}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2132_inPort1","location":{"x":536.2758560133952,"y":-111.796875}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2132_outPort1","location":{"x":796.4081256508575,"y":-211.246875}}],"layout":{"x":366.1581256508575,"y":-209.296875,"height":97.5,"width":860.5}},{"primitiveID":"StepRichLabelNode21_2405","primitiveName":"StepRichLabelNode21","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"checkJoin":{"type":"expression","expression":"let arr = graph.predecessors(\ngraph.nodes.find(\nnode => node.tag.primitiveID === primitiveID))\n.filter(\nnode => node.tag.properties.hasOwnProperty(\"source\"))\n.map(\nnode => (eval(node.tag.primitiveID)[\"source\"]))\n.toArray()\n\nfunction allAreEqual(array) {\n  const result = array.every(element => {\n    if (element === array[0]) {\n      return true;\n    }\n  });\n  return result;\n}\n!allAreEqual(arr)\n","status":"inProgress","input":{"component":"textarea"},"value":""},"OTLString":{"type":"expression","expression":"let this_node = graph.nodes.find(node => node.tag.primitiveID === primitiveID);\nconst props = this_node.tag.properties;\n\nlet arr = graph.predecessors(\ngraph.nodes.find(\nnode => node.tag.primitiveID === primitiveID))\n.filter(\nnode => node.tag.properties.hasOwnProperty(\"source\"))\n.map(\nnode => (eval(node.tag.primitiveID)[\"source\"]))\n.toArray()\n\nlet OTLString = \" | inputlookup \";\nlet source = \"\";\n\nif (this.checkJoin == false) {\nOTLString = OTLString + arr[0];\n}\n\nif (this.checkJoin!==\"false\" && ServiceTask_76.keyValue!==\"\") {\nOTLString = \"| inputlookup \" + this.inPort2 + \" $this.props.__rename$ $this.props.__month_days$ | rename Подрядчик as p, Типоразмер as t | eval pt = p+t | join \" + ServiceTask_76.keyValue + \" [| inputlookup \" + this.inPort1 + \" $this.props.__rename$ $this.props.__monthes_en$ | rename Подрядчик as p, Типоразмер as t | eval pt = p+t]\"\n}\n\nprops.OTL.expression.original_otl = OTLString;\nprops.OTL.status = \"new\";\nprops.OTL.value = \"\"\n","status":"inProgress","input":{"component":"textarea"},"value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_en":{"type":"expression","expression":"/* здесь команда для переименования цен по месяцам */ \nlet monthes = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\nlet st = \"\";\nfor (const el of monthes) {\nst = st + \" | rename \" + el + \" as \" + el + \"_price\"\n}\nst\n\n","status":"inProgress","input":{"component":"textarea"},"value":""},"__month_days":{"type":"expression","expression":"ServiceTask_76.__month_days","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes":{"type":"expression","expression":"ServiceTask_76.monthes_en","status":"inProgress","input":{"component":"textarea"},"value":""},"__planned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"ob_to_c":{"type":"datasource","expression":{"type":"OTL","tws":1669823622,"twf":1669823622,"cache_ttl":60,"original_otl":"| inputlookup malo_eff.csv | join lot,provider,deposit [| fsget path=FS/eprokat/ne_novomet] | foreach $this.props.__planned_monthes$ [| rename <<FIELD>>_vol as <<FIELD>>] | fields lot,provider,deposit,$this,props.__monthes$ $this.props.__avg_monthes$ | fsput path=$this.props.__savepath$"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__savepath":{"type":"expression","expression":"\"FS/eprokat/maloeff\"","status":"inProgress","input":{"component":"textarea"},"value":""},"malog":{"type":"datasource","expression":{"type":"OTL","tws":1669889135,"twf":1669889135,"cache_ttl":60,"original_otl":"| inputlookup prokat_small.csv | rename Подрядчик as provider | where provider!=\"Прокат_Пр (Новомет)\" $this.props.__rename$ $this.props.__month_days$ | rename Типоразмер as ti | eval pt =provider+ti | join pt [| inputlookup prokat_small_price.csv | rename Подрядчик as provider $this.props.__rename$ $this.props.__monthes_en$ | rename Типоразмер as ti | eval pt =provider+ti] | foreach $this.props.__planned_monthes$ [| eval <<FIELD>>_vol=<<FIELD>>*<<FIELD>>_price] | fields Месторождение, provider,ti,*_vol | eval lot=if(ti=\"энергоэффективный\",ti,\"малогабаритный\") | rename Месторождение as deposit | $this.props.__sum_vol$ | fsput path=FS/eprokat/ne_novomet"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__sum_vol":{"type":"expression","expression":"let dm = this.__planned_monthes;\nlet st = \"| stats \";\n\nfor (const el of dm) {\nst = st + \" sum(\" + el + \"_vol) as \" + el + \", \"\n}\nst=st.substring(0, st.length-2);\nst = st + \" by deposit,provider,lot\"\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__avg_monthes":{"type":"expression","expression":"let sm = ServiceTask_76.__sum_monthes;\nsm = sm.replace(/sum/g,'avg');\nsm = sm.replace(/_vol/g,'');\nsm = sm + \", provider,lot\"\nsm = sm.replace(/Месторождение/g,'deposit');\nsm","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>ПРОКАТ МАЛОГАБАРИТНЫХ УЭЦН и ЭНЕРГОЭФФЕКТИВНЫХ</strong></p><p>Прокат_Пр (Лекс)</p><p>Прокат_Пр (Борец_нов)</p><p>Прокат_Пр (Новомет)</p><p><br></p><p>Прокат_Пр (ПрКонтрАгент) -0</p><p>Прокат_Пр (Борец)&nbsp;- 0</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.__savepath","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2405_outPort1","location":{"x":1096.4457077890156,"y":-38.835000000000036}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2405_inPort1","location":{"x":1008.2457077890156,"y":115.08500000000004}},{"primitiveName":"inPort2","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2405_inPort2","location":{"x":1184.6457077890157,"y":115.08500000000004}}],"layout":{"x":949.4457077890156,"y":-35.875,"height":148,"width":294}},{"primitiveID":"StepRichLabelNode11_2133","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669203438,"twf":1669203438,"cache_ttl":60,"original_otl":"| fsget path=FS/component_fs/eov | fields provider,deposit,dec_old,constanta,percent22,coef_sobstv,mont_month | join provider,deposit [|fsget path=FS/component_fs/pump_mm] | eval dm =if(dec_old>0,mont_month*100/dec_old,0) | fsput path=FS/component_fs/pump_dm"},"status":"inProgress","value":"","input":{"component":"textarea"}}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Доля монтажей</p><p> </p><p>используется ЭЦН_ОБщие_вычет декабря прошлого года</p>","initPorts":[{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2133_inPort1","location":{"x":304.0949592566976,"y":880.4100000000001}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2133_outPort1","location":{"x":304.0949592566976,"y":794.0900000000001}}],"layout":{"x":221.34495925669762,"y":795.75,"height":83,"width":165.5}},{"primitiveID":"StepRichLabelNode11_2134","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>Сервисное обслуживание нефтепромыслового оборудования&nbsp; Добыча</strong></p>","initPorts":[{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2134_inPort1","location":{"x":66.99144363169762,"y":-132.83687499999996}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2134_outPort1","location":{"x":66.99144363169762,"y":-214.75687500000004}}],"layout":{"x":-124.00855636830238,"y":-211.796875,"height":76,"width":382}},{"primitiveID":"ControlledRichLabelNode01_15659","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Какая-то константа (столбец CV)</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15659_outPort1","location":{"x":219.21995925669762,"y":1045.878125}}],"layout":{"x":125.34495925669762,"y":1047.828125,"height":97.5,"width":187.75}},{"primitiveID":"StepRichLabelNode11_2135","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"do_prok_fact.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669798170,"twf":1669798170,"cache_ttl":60,"original_otl":"| fsget path=FS/eprokat/stp_o $this.props.__sum_by$ $this.props.__stp_rename$ | join deposit,provider [| inputlookup $this.props.source$] $this.props.__from_fact_to_planned$ | fields - *_stp | fillnull | foreach $this.props.__monthes_en$ [| rename <<FIELD>> as <<FIELD>>_do] | fsput path=$this.props.savepath$"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__monthes_en":{"type":"expression","expression":"ServiceTask_76.__monthes_en_massive","status":"inProgress","input":{"component":"textarea"},"value":""},"__sum_by":{"type":"expression","expression":"let sm = ServiceTask_76.__sum_monthes;\nsm = sm.replace(/_vol/g,'');\nsm = sm.replace(/Месторождение/g,'deposit');\nsm = sm+\",provider\"\nsm","status":"inProgress","input":{"component":"textarea"},"value":""},"__stp_rename":{"type":"expression","expression":"let fm=this.__monthes_en;\nlet st = \" | rename \";\nfor (const el of fm) {\nst = st + el + \" as \" + el + \"_stp,\"\n}\nst = st.substring(0,st.length-1)\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__prev_month":{"type":"expression","expression":"ServiceTask_76.__prev_month","status":"inProgress","value":"","input":{"component":"textarea"}},"__planned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"__from_fact_to_planned":{"type":"expression","expression":"let planned = this.__planned_monthes;\nlet prev = this.__prev_month;\nlet st = \"\";\n\nfor (const el of planned) {\nst = st + \" | eval \" + el + \"=case(\" + prev[el] + \"_stp!=0,\" + prev[el] + \"/\" + prev[el] + \"_stp*\" + el + \"_stp,\" + prev[el] + \"=0,0)\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"savepath":{"type":"expression","expression":"\"FS/eprokat/do\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Доп_оборудование</p><p><br></p><p>используются данный текущего и предыдущего месяцев по ст-ти проката</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.savepath","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2135_outPort1","location":{"x":800.7808158506816,"y":-5.379687499999989}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2135_inPort1","location":{"x":800.7808158506816,"y":96.02031249999999}}],"layout":{"x":728.9058158506816,"y":-3.4296875,"height":97.5,"width":143.75}},{"primitiveID":"StepRichLabelNode11_2136","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source_fact":{"type":"expression","expression":"\"st_prok_fact.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""},"__fact_monthes":{"type":"expression","expression":"ServiceTask_76.__fact_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"__fact_monthes_rename":{"type":"expression","expression":"let fm=ServiceTask_76.__fact_monthes;\nlet st = \" | rename \";\nfor (const el of fm) {\nst = st + el + \" as \" + el + \"_stp,\"\n}\nst = st.substring(0,st.length-1)\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"ind1":{"type":"expression","expression":"1.051","status":"inProgress","input":{"component":"textarea"},"value":""},"ind2":{"type":"expression","expression":"1.232","status":"inProgress","input":{"component":"textarea"},"value":""},"ind3":{"type":"expression","expression":"this.ind2","status":"inProgress","input":{"component":"textarea"},"value":""},"__ind_end_month":{"type":"expression","expression":"this.inPort2","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_en":{"type":"expression","expression":"ServiceTask_76.__monthes_en_massive","status":"inProgress","input":{"component":"textarea"},"value":""},"price_to_ind":{"type":"expression","expression":"let st = \"\";\nlet monthes = this.__monthes_en;\nlet em = this.__ind_end_month;\n\nmonthes = monthes.slice(0,em);\nmonthes","status":"inProgress","input":{"component":"textarea"},"value":""},"__price_from_fact_to_planned":{"type":"expression","expression":"let prev=this.__prev_month;\nlet planned=this.__planned_monthes;\nlet st = \"\";\nfor (const el of planned) {\nst = st + \" | eval price\" + \"_\" + el + \"=price_\" + prev[el]\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__prev_month":{"type":"expression","expression":"ServiceTask_76.__prev_month","status":"inProgress","value":"","input":{"component":"textarea"}},"__planned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"__stp_from_fact_to_planned":{"type":"expression","expression":"let prev=this.__prev_month;\nlet planned=this.__planned_monthes;\nlet st = \"\";\nfor (const el of planned) {\nst = st + \" | eval \" + el + \"_stp=\" + el + \"_sp*price_\" + el + \"/1000\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"stp_monthes":{"type":"expression","expression":"let m=this.__monthes_en;\nlet st = \"\";\nfor (const el of m) {\nst=st+ el + \"_stp,\"\n}\nst=st.substring(0,st.length-1)\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL_v":{"type":"datasource","expression":{"type":"OTL","tws":1669718399,"twf":1669718399,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source_fact$ $this.props.__fact_monthes_rename$ | join lot,provider,deposit [| fsget path=FS/component_fs/sut_prokat | where lot!=\"T\"] | where lot=\"выбытие\"| join lot,provider,deposit [| inputlookup price_v.csv] | fsput path=FS/eprokat/stp_v"},"status":"inProgress","value":"","input":{"component":"textarea"}},"OTL_o":{"type":"datasource","expression":{"type":"OTL","tws":1669726731,"twf":1669726731,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source_fact$ $this.props.__fact_monthes_rename$ | join lot,provider,deposit [| fsget path=FS/component_fs/sut_prokat | where lot!=\"T\"] | where lot!=\"выбытие\" | foreach $this.props.__fact_monthes$  [| eval price_<<FIELD>> = <<FIELD>>_stp/<<FIELD>>_sp*1000] | eval inflation=case(lot=\"Ind1\",$this.props.ind1$, lot=\"Ind2\",$this.props.ind2$,lot=\"Ind3\",$this.props.ind3$,lot=\"Osn\",1) | foreach $this.props.price_to_ind$ [| eval price_<<FIELD>>=price_<<FIELD>>*inflation] $this.props.__price_from_fact_to_planned$ $this.props.__stp_from_fact_to_planned$ | fields lot,provider,deposit,$this.props.stp_monthes$ | foreach $this.props.__monthes_en$ [| rename <<FIELD>>_stp as <<FIELD>>] | fillnull | fsput path=FS/eprokat/stp_o"},"status":"inProgress","value":"","input":{"component":"textarea"}},"OTL_total":{"type":"datasource","expression":{"type":"OTL","tws":1669726937,"twf":1669726937,"cache_ttl":60,"original_otl":"| fsget path=FS/eprokat/stp_o | append [|fsget path=FS/eprokat/stp_v] | fsput path=FS/eprokat/stp_T"},"status":"inProgress","value":"","input":{"component":"textarea"}},"OTL_proba":{"type":"datasource","expression":{"type":"OTL","tws":1669898370,"twf":1669898370,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source_fact$ $this.props.__fact_monthes_rename$ | join lot,provider,deposit [| fsget path=FS/component_fs/sut_prokat | where lot!=\"T\"] | where lot!=\"выбытие\" | foreach $this.props.__fact_monthes$  [| eval price_<<FIELD>> = <<FIELD>>_stp/<<FIELD>>_sp*1000] | eval inflation=case(lot=\"Ind1\",$this.props.ind1$, lot=\"Ind2\",$this.props.ind2$,lot=\"Ind3\",$this.props.ind3$,lot=\"Osn\",1) | foreach $this.props.price_to_ind$ [| eval price_<<FIELD>>=price_<<FIELD>>*inflation] $this.props.__price_from_fact_to_planned$ $this.props.__additional_price$ $this.props.__stp_from_fact_to_planned$"},"status":"inProgress","input":{"component":"textarea"},"value":""},"__additional_price":{"type":"expression","expression":"let monthes = [\"jun\", \"jul\", \"aug\", \"sep\", \"oct\"];\nlet prev = ServiceTask_76.__prev_month\nlet st = \"\";\n\nfor (const el of monthes) {\nst = st + \" | eval price_\" + el + \"=if(provider=\\\"ОйлПамп_Сервис\\\",price_\" + prev[el] + \",price_\" + el +\")\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>Стоимость_прокат</strong></p>","initPorts":[{"primitiveName":"inPort2","isAddedManually":true,"portLocation":"bottom","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\n          let inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray();\n          if (inEdges.length < 1) ''\n          else eval(inEdges[0].sourcePort.tag.primitiveID).status;","type":"expression","status":"inProgress","value":""}},"initPosition":{"x":0.3333333333333333,"y":1},"primitiveID":"StepRichLabelNode11_2136_inPort2","location":{"x":536.2758560133952,"y":252.4375}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2136_outPort1","location":{"x":536.2758560133952,"y":165.4875}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2136_inPort1","location":{"x":489.90976905687353,"y":252.4375}},{"primitiveName":"inPort3","isAddedManually":true,"portLocation":"bottom","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\n          let inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray();\n          if (inEdges.length < 1) ''\n          else eval(inEdges[0].sourcePort.tag.primitiveID).status;","type":"expression","status":"inProgress","value":""}},"initPosition":{"x":0.6666666666666666,"y":1},"primitiveID":"StepRichLabelNode11_2136_inPort3","location":{"x":589.4444792018011,"y":252.4375}}],"layout":{"x":442.40085601339524,"y":167.4375,"height":85,"width":187.75}},{"primitiveID":"StepRichLabelNode11_2137","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>План: входящие и выбывающие</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2137_outPort1","location":{"x":-67.50074386830238,"y":2.9875000000000114}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2137_inPort1","location":{"x":-67.50074386830238,"y":104.38749999999999}}],"layout":{"x":-174.87574386830238,"y":4.9375,"height":97.5,"width":214.75}},{"primitiveID":"ControlledRichLabelNode01_15660","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Какой-то % за соответствующий год</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15660_outPort1","location":{"x":424.0324592566976,"y":1045.878125}}],"layout":{"x":330.1574592566976,"y":1047.828125,"height":97.5,"width":187.75}},{"primitiveID":"ControlledRichLabelNode01_15661","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>К-т вовлечения собственного оборудования</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15661_outPort1","location":{"x":508.0109748816976,"y":794.0900000000001}}],"layout":{"x":425.2609748816976,"y":795.75,"height":83,"width":165.5}},{"primitiveID":"StepRichLabelNode11_2138","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669380947,"twf":1669380947,"cache_ttl":60,"original_otl":"| fsget path=FS/component_fs/EP | where lot=\"T\" $this.props.__sut_prokat$ | append [| inputlookup sut_prok_fact.csv | where lot!=\"выбытие\"  $this.props.__fact_monthes_rename$ | join lot,provider,deposit [| fsget path=FS/component_fs/EP | where lot!=\"T\" and lot!=\"выбытие\" $this.props.__from_fact_to_planned$ | fields deposit,provider,lot,*_sp]] | append [| inputlookup sut_prok_fact.csv | where lot=\"выбытие\" $this.props.__fact_monthes_rename$ | join lot,provider,deposit [| fsget path=FS/component_fs/EP | where lot=\"выбытие\" $this.props.__from_fact_to_planned_v$ | fields deposit,provider,lot,*_sp]] | fields lot,deposit,provider,$this.props.__fields_sp$ | fsput path=FS/component_fs/sut_prokat"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__prev_month":{"type":"expression","expression":"ServiceTask_76.__prev_month","status":"inProgress","value":"","input":{"component":"textarea"}},"__sut_prokat":{"type":"expression","expression":"let st = \"\";\nlet prev = this.__prev_month;\nlet dm = this.__month_days;\nlet monthes = ServiceTask_76.__monthes_en_massive;\n\nfor (const el of monthes) {\nst = st + \" | eval \" + el + \"_sp=round((\" + el + \"-\" + prev[el] + \")*\" + this.coef + \"*\" + dm[el] + \"/2+\" + prev[el] + \"*\" + this.coef + \"*\" + dm[el] + \",0)\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__month_days":{"type":"expression","expression":"let dm = { \"jan\" : 25, \"feb\" : 31, \"mar\" : 28, \"apr\" : 31, \"may\" : 30, \"jun\" : 31, \"jul\" : 30, \"aug\" : 31, \"sep\" : 31, \"oct\" : 30, \"nov\" : 31, \"dec\" : 36}\ndm","status":"inProgress","value":"","input":{"component":"textarea"}},"coef":{"type":"expression","expression":"0.98","status":"inProgress","input":{"component":"textarea"},"value":""},"__from_fact_to_planned":{"type":"expression","expression":"let planned = this.__planned_monthes;\nlet prev = this.__prev_month;\nlet st = \"\";\nlet dm = this.__month_days;\n\nfor (const el of planned) {\nst = st + \" | eval \" + el + \"_sp=round((\" + el + \"-\" + prev[el] + \")*\" + this.coef + \"*\" + dm[el] + \"/2+\" + prev[el] + \"*\" + this.coef + \"*\" + dm[el] + \",0)\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__planned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL_v":{"type":"datasource","expression":{"type":"OTL","tws":1669391989,"twf":1669391989,"cache_ttl":60,"original_otl":"| inputlookup sut_prok_fact.csv | where lot=\"выбытие\" | join lot,provider,deposit [| fsget path=FS/component_fs/EP | where lot=\"выбытие\" $this.props.__from_fact_to_planned_v$ | fields deposit,provider,lot,*_sp] $this.props.__fact_monthes_rename$"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__from_fact_to_planned_v":{"type":"expression","expression":"let planned = this.__planned_monthes;\nlet prev = this.__prev_month;\nlet st = \"\";\nlet dm = this.__month_days;\n\nfor (const el of planned) {\nst = st + \" | eval \" + el + \"_sp=round(\" + el + \"*\" + dm[el] + \"*\" + this.coef + \",0)\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__fields_sp":{"type":"expression","expression":"let sp = ServiceTask_76.__fields_sp\nsp ","status":"inProgress","input":{"component":"textarea"},"value":""},"__fact_monthes_rename":{"type":"expression","expression":"let fm=ServiceTask_76.__fact_monthes;\nlet st = \" | rename \";\nfor (const el of fm) {\nst = st + el + \" as \" + el + \"_sp,\"\n}\nst = st.substring(0,st.length-1)\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL_TQ":{"type":"datasource","expression":{"type":"OTL","tws":1669894462,"twf":1669894462,"cache_ttl":60,"original_otl":"| fsget path=FS/component_fs/sut_prokat | where lot!=\"T\" $this.props.__sum_sp$ | fsput path=FS/eprokat/sum_sp"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__sum_sp":{"type":"expression","expression":"let fs=this.__fields_sp;\nlet st = \" | stats \";\nfor (const el of fs) {\nst = st + \"sum(\" + el + \") as \" + el + \",\"\n}\nst = st.substring(0,st.length-1)\nst = st + \" by deposit\"\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"ov":{"type":"datasource","expression":{"type":"OTL","tws":1669970186,"twf":1669970186,"cache_ttl":60,"original_otl":"| inputlookup sut_prok_fact.csv | where lot!=\"выбытие\" $this.props.__fact_monthes_rename$ | join lot,provider,deposit [| fsget path=FS/component_fs/EP | where lot!=\"T\" and lot!=\"выбытие\" $this.props.__from_fact_to_planned$ | fields deposit,provider,lot,*_sp]"},"status":"inProgress","value":"","input":{"component":"textarea"}}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>Сутки_прокат</strong></p><p><br></p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2138_outPort1","location":{"x":494.2824592566976,"y":374.82375}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2138_inPort1","location":{"x":494.2824592566976,"y":453.86375}}],"layout":{"x":390.9074592566976,"y":376.34375,"height":76,"width":206.75}},{"primitiveID":"Исходный__Excel_484","primitiveName":"Исходный__Excel","properties":{"source":{"type":"expression","expression":"\"indexation.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"nodeTitle":"Договора_Дменов_Индексация","image":"/rawPrimitives/Исходный__Excel/excel.svg","initPorts":[{"properties":{"status":{"type":"expression","expression":"this.source","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveName":"outPort11","type":["OUT"],"primitiveID":"Исходный__Excel_484_outPort11","location":{"x":668.9058158506816,"y":-81.796875}}],"layout":{"x":638.9058158506816,"y":-81.796875,"height":60,"width":60}},{"primitiveID":"ControlledRichLabelNode01_15662","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Сценарий запуска прокатного фонда после простоя</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15662_outPort1","location":{"x":711.9269905066976,"y":794.0900000000001}}],"layout":{"x":629.1769905066976,"y":795.75,"height":83,"width":165.5}},{"primitiveID":"Исходный__Excel_485","primitiveName":"Исходный__Excel","properties":{"source":{"type":"expression","expression":"","status":"inProgress","value":""}},"nodeTitle":"[ИД_СДФ_2022-2026_.xlsb]СДФ'!","image":"/rawPrimitives/Исходный__Excel/excel.svg","initPorts":[{"properties":{"status":{"type":"expression","expression":"","status":"inProgress","value":""}},"primitiveName":"outPort11","type":["OUT"],"primitiveID":"Исходный__Excel_485_outPort11","location":{"x":-266.4382438683024,"y":1541.203125}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"Исходный__Excel_485_inPort1","location":{"x":-266.4382438683024,"y":1603.153125}}],"layout":{"x":-296.4382438683024,"y":1541.203125,"height":60,"width":60}},{"primitiveID":"StepRichLabelNode11_2139","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query + \" Подр_ЭПУ as provider, Месторождение as deposit\"","status":"inProgress","input":{"component":"textarea"},"value":""},"__sum_monthes":{"type":"expression","expression":"let sm = ServiceTask_76.__sum_monthes;\nsm = sm.replace(/_vol/g,'');\nsm = sm + \", provider\"\nsm = sm.replace(/Месторождение/g,'deposit');","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_en":{"type":"expression","expression":"ServiceTask_76.monthes_en","status":"inProgress","input":{"component":"textarea"},"value":""},"O_sum":{"type":"datasource","expression":{"type":"OTL","tws":1669114515,"twf":1669114515,"cache_ttl":60,"original_otl":"| inputlookup CDF_svod_GTM_baza.csv | where table=\"СДФ_геологический\" | rename Подр_ЭПУ as provider, Месторождение as deposit $this.props.__monthes_big$ | join provider, deposit [| inputlookup prokat_small.csv | fields - Подрядчик $this.props.__rename$ $this.props.__sum_monthes$ $this.props.__monthes_small$] | foreach $this.props.__monthes_en$ [ |eval <<FIELD>> = <<FIELD>>_big - <<FIELD>>_small] | fields - *big, *small | fields provider,deposit,dec_old,$this.props.__plannned_monthes$ | foreach $this.props.__plannned_monthes$ [|rename <<FIELD>> as <<FIELD>>_v] | fsput path=FS/component_fs/eov"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__monthes_big":{"type":"expression","expression":"/* здесь команда для переименования цен по месяцам */ \nlet monthes = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\nlet st = \"\";\nfor (const el of monthes) {\nst = st + \" | rename \" + el + \" as \" + el + \"_big\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_small":{"type":"expression","expression":"/* здесь команда для переименования цен по месяцам */ \nlet monthes = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\nlet st = \"\";\nfor (const el of monthes) {\nst = st + \" | rename \" + el + \" as \" + el + \"_small\"\n}\nst","status":"inProgress","input":{"component":"textarea"},"value":""},"__plannned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>ЭЦН_Общие_вычет ;</strong></p><p><strong>Основной_предыдущий месяц из этой же таблицы</strong></p>","initPorts":[{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2139_inPort1","location":{"x":-157.06324386830238,"y":1140.258125}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2139_outPort1","location":{"x":-157.06324386830238,"y":1052.8981250000002}}],"layout":{"x":-360.3132438683024,"y":1054.578125,"height":84,"width":406.5}},{"primitiveID":"StepRichLabelNode11_2140","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Сутки_сервис</p>","initPorts":[{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2140_inPort1","location":{"x":9.12425613169762,"y":266.9575}},{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2140_outPort1","location":{"x":9.12425613169762,"y":187.9175}}],"layout":{"x":-73.62574386830238,"y":189.4375,"height":76,"width":165.5}},{"primitiveID":"StepRichLabelNode11_2141","primitiveName":"StepRichLabelNode11","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669117142,"twf":1669117142,"cache_ttl":60,"original_otl":"| inputlookup pump_prokat2.csv | eval mont_month = constanta*percent22 | fsput path=FS/component_fs/pump_mm"},"status":"inProgress","value":"","input":{"component":"textarea"}}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Кол-во монтажей_мес</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.OTL[0]","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2141_outPort1","location":{"x":304.0949592566976,"y":933.1681249999999}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode11_2141_inPort1","location":{"x":304.0949592566976,"y":1019.4881250000001}}],"layout":{"x":221.34495925669762,"y":934.828125,"height":83,"width":165.5}},{"primitiveID":"StepRichLabelNode21_2406","primitiveName":"StepRichLabelNode21","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"checkJoin":{"type":"expression","expression":"let arr = graph.predecessors(\ngraph.nodes.find(\nnode => node.tag.primitiveID === primitiveID))\n.filter(\nnode => node.tag.properties.hasOwnProperty(\"source\"))\n.map(\nnode => (eval(node.tag.primitiveID)[\"source\"]))\n.toArray()\n\nfunction allAreEqual(array) {\n  const result = array.every(element => {\n    if (element === array[0]) {\n      return true;\n    }\n  });\n  return result;\n}\n!allAreEqual(arr)\n","status":"inProgress","input":{"component":"textarea"},"value":""},"OTLString":{"type":"expression","expression":"let this_node = graph.nodes.find(node => node.tag.primitiveID === primitiveID);\nconst props = this_node.tag.properties;\n\nlet arr = graph.predecessors(\ngraph.nodes.find(\nnode => node.tag.primitiveID === primitiveID))\n.filter(\nnode => node.tag.properties.hasOwnProperty(\"source\"))\n.map(\nnode => (eval(node.tag.primitiveID)[\"source\"]))\n.toArray()\n\nlet OTLString = \" | inputlookup \";\nlet source = \"\";\n\nif (this.checkJoin == false) {\nOTLString = OTLString + arr[0];\n}\n\nif (this.checkJoin!==\"false\" && ServiceTask_76.keyValue!==\"\") {\nOTLString = \"| inputlookup \" + this.inPort2 + \" $this.props.__rename$ $this.props.__month_days$ | rename Подрядчик as p, Типоразмер as t | eval pt = p+t | join \" + ServiceTask_76.keyValue + \" [| inputlookup \" + this.inPort1 + \" $this.props.__rename$ $this.props.__monthes_en$ | rename Подрядчик as p, Типоразмер as t | eval pt = p+t]\"\n}\n\nprops.OTL.expression.original_otl = OTLString;\nprops.OTL.status = \"new\";\nprops.OTL.value = \"\"\n","status":"inProgress","input":{"component":"textarea"},"value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query","status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes_en":{"type":"expression","expression":"/* здесь команда для переименования цен по месяцам */ \nlet monthes = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\nlet st = \"\";\nfor (const el of monthes) {\nst = st + \" | rename \" + el + \" as \" + el + \"_price\"\n}\nst\n\n","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669031414,"twf":1669031414,"cache_ttl":60,"original_otl":"| inputlookup prokat_small.csv $this.props.__rename$ $this.props.__month_days$ | rename Подрядчик as p, Типоразмер as t | eval pt = p+t | join pt [| inputlookup prokat_small_price.csv $this.props.__rename$ $this.props.__monthes_en$ | rename Подрядчик as p, Типоразмер as t | eval pt = p+t]"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__month_days":{"type":"expression","expression":"ServiceTask_76.__month_days","status":"inProgress","input":{"component":"textarea"},"value":""},"O3":{"type":"datasource","expression":{"type":"OTL","tws":1669033467,"twf":1669033467,"cache_ttl":60,"original_otl":"| inputlookup prokat_small.csv | where Подрядчик=\"Прокат_Пр (Новомет)\" $this.props.__rename$ $this.props.__month_days$ | rename Подрядчик as provider, Типоразмер as ti | eval pt =provider+ti | join pt [| inputlookup prokat_small_price.csv $this.props.__rename$ $this.props.__monthes_en$ | rename Подрядчик as provider, Типоразмер as ti | eval pt =provider+ti] | foreach $this.props.__planned_monthes$ [| eval <<FIELD>>_vol=<<FIELD>>*<<FIELD>>_price]"},"status":"inProgress","input":{"component":"textarea"},"value":""},"__monthes":{"type":"expression","expression":"ServiceTask_76.monthes_en","status":"inProgress","input":{"component":"textarea"},"value":""},"__sum_monthes":{"type":"expression","expression":"ServiceTask_76.__sum_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"__planned_monthes":{"type":"expression","expression":"ServiceTask_76.__planned_monthes","status":"inProgress","input":{"component":"textarea"},"value":""},"oa":{"type":"datasource","expression":{"type":"OTL","tws":1669821657,"twf":1669821657,"cache_ttl":60,"original_otl":"| inputlookup prokat_small.csv | rename Подрядчик as provider | where provider=\"Прокат_Пр (Новомет)\" $this.props.__rename$ $this.props.__month_days$ | rename Типоразмер as ti | eval pt =provider+ti | join pt [| inputlookup prokat_small_price.csv | rename Подрядчик as provider $this.props.__rename$ $this.props.__monthes_en$ | rename Типоразмер as ti | eval pt =provider+ti] | foreach $this.props.__monthes$ [| eval <<FIELD>>_vol=<<FIELD>>*<<FIELD>>_price]"},"status":"inProgress","value":"","input":{"component":"textarea"}},"ob":{"type":"datasource","expression":{"type":"OTL","tws":1669822149,"twf":1669822149,"cache_ttl":60,"original_otl":"| inputlookup prokat_small.csv | rename Подрядчик as provider | where provider!=\"Прокат_Пр (Новомет)\" $this.props.__rename$ $this.props.__month_days$ | rename Типоразмер as ti | eval pt =provider+ti | join pt [| inputlookup prokat_small_price.csv | rename Подрядчик as provider $this.props.__rename$ $this.props.__monthes_en$ | rename Типоразмер as ti | eval pt =provider+ti] | foreach $this.props.__planned_monthes$ [| eval <<FIELD>>_vol=<<FIELD>>*<<FIELD>>_price] | fields Месторождение, provider,ti,*_vol | eval lot=if(ti=\"энергоэффективный\",ti,\"малогабаритный\") | rename Месторождение as deposit | fsput path=FS/eprokat/ne_novomet"},"status":"inProgress","value":"","input":{"component":"textarea"}},"ob_to_c":{"type":"datasource","expression":{"type":"OTL","tws":1669823622,"twf":1669823622,"cache_ttl":60,"original_otl":"| inputlookup malo_eff.csv | join lot,provider,deposit [| fsget path=FS/eprokat/ne_novomet] | foreach $this.props.__planned_monthes$ [| rename <<FIELD>>_vol as <<FIELD>>] | fields lot,provider,deposit,$this,props.__monthes$"},"status":"inProgress","value":"","input":{"component":"textarea"}}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p><strong>ПРОКАТ МАЛОГАБАРИТНЫХ УЭЦН и ЭНЕРГОЭФФЕКТИВНЫХ</strong></p><p>Прокат_Пр (Лекс)</p><p>Прокат_Пр (Борец_нов)</p><p>Прокат_Пр (Новомет)</p><p><br></p><p>Прокат_Пр (ПрКонтрАгент) -0</p><p>Прокат_Пр (Борец)&nbsp;- 0</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"expression":"","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2406_outPort1","location":{"x":116.89378738169762,"y":1212.868125}},{"primitiveName":"inPort2","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2406_inPort2","location":{"x":205.09378738169767,"y":1366.788125}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2406_inPort1","location":{"x":28.693787381697575,"y":1366.788125}},{"primitiveName":"inPort1","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2406_inPort1","location":{"x":31.693787381697575,"y":1363.828125}},{"primitiveName":"inPort2","type":["IN"],"properties":{"status":{"expression":"let portOwner = graph.ports.find(port => port.tag.primitiveID === primitiveID).owner;\nlet inEdges = graph.inEdgesAt(portOwner).filter(edge => edge.targetPort.tag.primitiveID === primitiveID).toArray()\nif (inEdges.length < 1) ''\nelse {\neval(inEdges[0].sourcePort.tag.primitiveID).status\n}","type":"expression","status":"inProgress","value":""}},"primitiveID":"StepRichLabelNode21_2406_inPort2","location":{"x":208.09378738169767,"y":1363.828125}}],"layout":{"x":-30.10621261830238,"y":1215.828125,"height":148,"width":294}},{"primitiveID":"Исходный__Excel_486","primitiveName":"Исходный__Excel","properties":{"source":{"type":"expression","expression":"","status":"inProgress","value":""},"description":{"type":"expression","expression":"\"Инфа за предыдущий месяц\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"nodeTitle":"SAP_предыдущий","image":"/rawPrimitives/Исходный__Excel/excel.svg","initPorts":[{"properties":{"status":{"type":"expression","expression":"","status":"inProgress","value":""}},"primitiveName":"outPort11","type":["OUT"],"primitiveID":"Исходный__Excel_486_outPort11","location":{"x":530.8937873816976,"y":1429.078125}}],"layout":{"x":500.8937873816976,"y":1429.078125,"height":60,"width":60}},{"primitiveID":"Исходный__Excel_487","primitiveName":"Исходный__Excel","properties":{"source":{"type":"expression","expression":"","status":"inProgress","value":""},"description":{"type":"expression","expression":"\"Инфа за предыдущий месяц\"","status":"inProgress","input":{"component":"textarea"},"value":""}},"nodeTitle":"SAP_предыдущий","image":"/rawPrimitives/Исходный__Excel/excel.svg","initPorts":[{"properties":{"status":{"type":"expression","expression":"","status":"inProgress","value":""}},"primitiveName":"outPort11","type":["OUT"],"primitiveID":"Исходный__Excel_487_outPort11","location":{"x":494.2824592566976,"y":566.671875}}],"layout":{"x":464.2824592566976,"y":566.671875,"height":60,"width":60}},{"primitiveID":"ControlledRichLabelNode01_15663","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"__name":{"type":"expression","expression":"\"Параметры цены\"","status":"inProgress","input":{"component":"textarea"},"value":""},"Ind_end_month":{"type":"expression","expression":"/* Крайний месяц индексации для Ind- оборудования (с января по указанный месяц), писать числом */\n3","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>$this.props.__name$</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.Ind_end_month","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15663_outPort1","location":{"x":891.3156623816976,"y":410.745625}}],"layout":{"x":787.9406623816976,"y":412.265625,"height":76,"width":206.75}},{"primitiveID":"ControlledRichLabelNode01_15664","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"prokat_small_price.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669027956,"twf":1669027956,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source$ $this.props.__rename$ | foreach $this.props.__monthes_en$ [| rename <<FIELD>> as <<FIELD>>_price] | rename Подрядчик as p | rename Типоразмер as t | eval pt = p+t"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__rename_price":{"type":"expression","expression":"","status":"inProgress","value":""},"__monthes_en":{"type":"expression","expression":"\"jan,feb,mar,apr,may,jun,jul,aug,sep,oct,nov,dec\"\n","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Цена проката по типоразмеру и подрядчикам</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.source","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15664_outPort1","location":{"x":959.8373093515156,"y":165.12750000000005}}],"layout":{"x":848.2484421640156,"y":167.4375,"height":120,"width":223.177734375}},{"primitiveID":"ControlledRichLabelNode01_15665","primitiveName":"ControlledRichLabelNode01","properties":{"testField":{"expression":"","type":"expression","status":"inProgress","value":""},"source":{"type":"expression","expression":"\"prokat_small.csv\"","status":"inProgress","input":{"component":"textarea"},"value":""},"__rename":{"type":"expression","expression":"\" | rename \" + ServiceTask_76.rename[0].query","status":"inProgress","input":{"component":"textarea"},"value":""},"OTL":{"type":"datasource","expression":{"type":"OTL","tws":1669027956,"twf":1669027956,"cache_ttl":60,"original_otl":"| inputlookup $this.props.source$ $this.props.__rename$ $this.props.__month_days$"},"status":"inProgress","value":"","input":{"component":"textarea"}},"__month_days":{"type":"expression","expression":"ServiceTask_76.__month_days","status":"inProgress","input":{"component":"textarea"},"value":""}},"extensionName":"ExtensionRiskPrimitives","nodeTitle":"<p>Кол-во скважин по типоразмерам (сумма по месторождению) и подрядчикам</p>","initPorts":[{"primitiveName":"outPort1","type":["OUT"],"properties":{"status":{"type":"expression","expression":"this.source","input":{"component":"textarea"},"status":"inProgress","value":""}},"primitiveID":"ControlledRichLabelNode01_15665_outPort1","location":{"x":1248.4261765390156,"y":169.62750000000005}}],"layout":{"x":1101.4261765390156,"y":171.9375,"height":115.5,"width":294}}],"edges":[{"bends":[],"sourceNode":"Исходный__Excel_482","sourcePort":"Исходный__Excel_482_outPort11","targetNode":"StepRichLabelNode11_2129","targetPort":"StepRichLabelNode11_2129_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15654","sourcePort":"ControlledRichLabelNode01_15654_outPort1","targetNode":"StepRichLabelNode21_2406","targetPort":"StepRichLabelNode21_2406_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"Исходный__Excel_483","sourcePort":"Исходный__Excel_483_outPort11","targetNode":"StepRichLabelNode11_2131","targetPort":"StepRichLabelNode11_2131_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15655","sourcePort":"ControlledRichLabelNode01_15655_outPort1","targetNode":"StepRichLabelNode11_2137","targetPort":"StepRichLabelNode11_2137_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15656","sourcePort":"ControlledRichLabelNode01_15656_outPort1","targetNode":"StepRichLabelNode21_2406","targetPort":"StepRichLabelNode21_2406_inPort2","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2128","sourcePort":"StepRichLabelNode11_2128_outPort1","targetNode":"StepRichLabelNode11_2139","targetPort":"StepRichLabelNode11_2139_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2129","sourcePort":"StepRichLabelNode11_2129_outPort1","targetNode":"StepRichLabelNode11_2138","targetPort":"StepRichLabelNode11_2138_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15657","sourcePort":"ControlledRichLabelNode01_15657_outPort1","targetNode":"StepRichLabelNode11_2129","targetPort":"StepRichLabelNode11_2129_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2130","sourcePort":"StepRichLabelNode11_2130_outPort1","targetNode":"StepRichLabelNode11_2128","targetPort":"StepRichLabelNode11_2128_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15658","sourcePort":"ControlledRichLabelNode01_15658_outPort1","targetNode":"StepRichLabelNode11_2138","targetPort":"StepRichLabelNode11_2138_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2131","sourcePort":"StepRichLabelNode11_2131_outPort1","targetNode":"StepRichLabelNode11_2134","targetPort":"StepRichLabelNode11_2134_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode21_2405","sourcePort":"StepRichLabelNode21_2405_outPort1","targetNode":"StepRichLabelNode11_2132","targetPort":"StepRichLabelNode11_2132_inPort4","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2133","sourcePort":"StepRichLabelNode11_2133_outPort1","targetNode":"StepRichLabelNode11_2129","targetPort":"StepRichLabelNode11_2129_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15659","sourcePort":"ControlledRichLabelNode01_15659_outPort1","targetNode":"StepRichLabelNode11_2141","targetPort":"StepRichLabelNode11_2141_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2135","sourcePort":"StepRichLabelNode11_2135_outPort1","targetNode":"StepRichLabelNode11_2132","targetPort":"StepRichLabelNode11_2132_inPort3","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2136","sourcePort":"StepRichLabelNode11_2136_outPort1","targetNode":"StepRichLabelNode11_2132","targetPort":"StepRichLabelNode11_2132_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2136","sourcePort":"StepRichLabelNode11_2136_outPort1","targetNode":"StepRichLabelNode11_2135","targetPort":"StepRichLabelNode11_2135_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2137","sourcePort":"StepRichLabelNode11_2137_outPort1","targetNode":"StepRichLabelNode11_2134","targetPort":"StepRichLabelNode11_2134_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15660","sourcePort":"ControlledRichLabelNode01_15660_outPort1","targetNode":"StepRichLabelNode11_2141","targetPort":"StepRichLabelNode11_2141_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15661","sourcePort":"ControlledRichLabelNode01_15661_outPort1","targetNode":"StepRichLabelNode11_2129","targetPort":"StepRichLabelNode11_2129_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2138","sourcePort":"StepRichLabelNode11_2138_outPort1","targetNode":"StepRichLabelNode11_2136","targetPort":"StepRichLabelNode11_2136_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2138","sourcePort":"StepRichLabelNode11_2138_outPort1","targetNode":"StepRichLabelNode11_2140","targetPort":"StepRichLabelNode11_2140_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"Исходный__Excel_484","sourcePort":"Исходный__Excel_484_outPort11","targetNode":"StepRichLabelNode11_2132","targetPort":"StepRichLabelNode11_2132_inPort2","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15662","sourcePort":"ControlledRichLabelNode01_15662_outPort1","targetNode":"StepRichLabelNode11_2129","targetPort":"StepRichLabelNode11_2129_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"Исходный__Excel_485","sourcePort":"Исходный__Excel_485_outPort11","targetNode":"StepRichLabelNode11_2130","targetPort":"StepRichLabelNode11_2130_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2139","sourcePort":"StepRichLabelNode11_2139_outPort1","targetNode":"StepRichLabelNode11_2133","targetPort":"StepRichLabelNode11_2133_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2139","sourcePort":"StepRichLabelNode11_2139_outPort1","targetNode":"StepRichLabelNode11_2129","targetPort":"StepRichLabelNode11_2129_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2140","sourcePort":"StepRichLabelNode11_2140_outPort1","targetNode":"StepRichLabelNode11_2137","targetPort":"StepRichLabelNode11_2137_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode11_2141","sourcePort":"StepRichLabelNode11_2141_outPort1","targetNode":"StepRichLabelNode11_2133","targetPort":"StepRichLabelNode11_2133_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"StepRichLabelNode21_2406","sourcePort":"StepRichLabelNode21_2406_outPort1","targetNode":"StepRichLabelNode11_2139","targetPort":"StepRichLabelNode11_2139_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"Исходный__Excel_487","sourcePort":"Исходный__Excel_487_outPort11","targetNode":"StepRichLabelNode11_2138","targetPort":"StepRichLabelNode11_2138_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15663","sourcePort":"ControlledRichLabelNode01_15663_outPort1","targetNode":"StepRichLabelNode11_2136","targetPort":"StepRichLabelNode11_2136_inPort2","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15664","sourcePort":"ControlledRichLabelNode01_15664_outPort1","targetNode":"StepRichLabelNode21_2405","targetPort":"StepRichLabelNode21_2405_inPort1","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"},{"bends":[],"sourceNode":"ControlledRichLabelNode01_15665","sourcePort":"ControlledRichLabelNode01_15665_outPort1","targetNode":"StepRichLabelNode21_2405","targetPort":"StepRichLabelNode21_2405_inPort2","extensionName":"ExtensionCommonPrimitives","primitiveName":"SimpleEdge"}],"groups":[]}}